apiVersion: sonataflow.org/v1alpha08
kind: SonataFlow
metadata:
  annotations:
    sonataflow.org/description: YAML based greeting workflow
    sonataflow.org/expressionLang: jsonpath
    sonataflow.org/profile: dev
    sonataflow.org/version: "1.0"
  creationTimestamp: null
  labels:
    app: yamlgreet
    sonataflow.org/workflow-app: yamlgreet
  name: yamlgreet
spec:
  flow:
    annotations:
      - workflow-type/infrastructure
    dataInputSchema:
      failOnValidationErrors: true
      schema: greeting.sw.input-schema.json
    functions:
    - name: greetFunction
      operation: sysout
      type: custom
    start:
      stateName: ChooseOnLanguage
    states:
    - dataConditions:
      - condition: ${$.[?(@.language  == 'English')]}
        transition:
          nextState: GreetInEnglish
      - condition: ${$.[?(@.language  == 'Spanish')]}
        transition:
          nextState: GreetInSpanish
      defaultCondition:
        transition:
          nextState: GreetInEnglish
      name: ChooseOnLanguage
      type: switch
    - data:
        greeting: 'Hello from YAML Workflow, '
      name: GreetInEnglish
      transition:
        nextState: GreetPerson
      type: inject
    - data:
        greeting: 'Saludos desde YAML Workflow, '
      name: GreetInSpanish
      transition:
        nextState: GreetPerson
      type: inject
    - actionMode: sequential
      actions:
      - actionDataFilter:
          useResults: true
        functionRef:
          arguments:
            message: $.greeting $.name
          invoke: sync
          refName: greetFunction
        name: greetAction
      end:
        terminate: true
      name: GreetPerson
      type: operation
  podTemplate:
    container:
      resources: {}
      image: quay.io/masayag/serverless-workflow-greeting:latest
  resources:
    configMaps:
    - configMap:
        name: 01-yamlgreet-resources
      workflowPath: specs
status:
  address: {}
  lastTimeRecoverAttempt: null
